Инструкция по базовой интеграции сервера мобильных приложений с биллингом провайдера.
Для выполнения данной работы необходим базовый уровень знания языка Python.

В файле  smartyard_bill.py  находятся ряд функций, которые для первичной проверки работоспособности сервера имеют фейковые данные. 

Для начала интеграции необходимо реализовать основную функцию uidFrom(phone). Эта функция на вход принимает номер телефона клиента int 891009999999, на выходе должна выдавать массив уникальных числовых идентификаторов, далее именуемых UID договоров клиента, в которых есть этот номер телефона (или пустой массив):

def uidFrom(phone):
    uid = [10,101]
    return uid

Следующей базовой функцией является camsActiv(uid), на входе которой uid, на выходе которой объект из двух ключей и их значений в формате Bool: 'cams_open' — назначена ли в договоре услуга домофоны+видеонаблюдение и 'cams_paid' и оплачена ли она.

def camsActiv(uid):
    row = {'cams_open': True, 'cams_paid': True}
    return row


Внимание!!! Эти две функции являются базовыми и часто используются в различных местах. В связи с этим настоятельно рекомендуется их реализовывать путем прямых sql запросов в базу данных биллинга. Для этого необходимо предоставить доступ только на чтение и сформировать sql запрос, ответом на который будет получение указанной информации.


Далее, во вкладеке «Договора» используется базовый запрос billingList(userphone), на вход которого поступает номер телефона клиента, на выходе массив объектов из договора клиента. Примеры данных и их типы ниже в коментарии:

def billingList(userphone):
    uids = uidFrom(userphone)
    billingList = []
    for uid in uids:
        row = {}
        row['login'] = '00101'  # Строковое значение логина договора
        row['address'] = 'г. Москва, ул. Тверская, д 1 кв. 1'  # Строковое значение логина договора
        row['internet'] = 100.0   # Флоат, стоимость продление услуги Интернета, 0.0 если нет
        row['internetdata'] = '2025-11-12'   # Строковое значение даты окончания услуги Инт, '' если нет
        row['tv'] = 0.0   # Флоат, стоимость продление услуги ТВ, 0.0 если нет
        row['tvdata'] = '' # Строковое значение даты окончания услуги ТВ, '' если нет
        row['phone'] = 0.0   # Флоат, стоимость продление услуги телефона, 0.0 если нет
        row['phonedata'] = '' # Строковое значение даты окончания услуги телефона, '' если нет
        row['cams'] = 100.0   # Флоат, стоимость продление услуги камеры+домофон, 0.0 если нет
        row['camsdata'] = '2025-11-12'   # Строковое значение даты окончания услуги камеры+домофон, '' если нет
        row['camsname'] = 'Умное пространство'  # Строковое значение названия услуги камеры+домофон, '' если нет
        row['balans'] = 50.0 # Флоат, текущиий баланс, 0.0 если нет
        row['payment'] = 500.0 # Флоат, рекомендованный платеж, 0.0 если нет
        row['invoice'] = True # Bool, разрешено ли показывать кнопку «Счета»
        row['detail'] = True # Bool, разрешено ли показывать кнопку «Детализация»
        row['receipt'] = True # Bool, разрешено ли показывать кнопку «Получить акт»
        billingList.append(row)
    return billingList 
